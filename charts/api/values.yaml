deployment:
  replicaCount: 3
  image:
    repository: ghcr.io/spitikos/api
    pullPolicy: Always
    tag: b5df71e6476153985ae852a0805597500ae49f94
  resources:
    requests:
      cpu: 100m
      memory: 64Mi
    limits:
      cpu: 250m
      memory: 128Mi
service:
  type: ClusterIP
  port: 50051
  targetPort: 50051
  portName: grpc
ingress:
  host: api.spitikos.dev
  annotations:
    nginx.ingress.kubernetes.io/enable-cors: 'true'
    nginx.ingress.kubernetes.io/cors-allow-origin: http://localhost:3000,https://spitikos.dev
    nginx.ingress.kubernetes.io/cors-allow-methods: GET, POST
    nginx.ingress.kubernetes.io/cors-allow-headers: Content-Type,Connect-Protocol-Version,Connect-Timeout-Ms,Grpc-Timeout,X-Grpc-Web,X-User-Agent
    nginx.ingress.kubernetes.io/cors-expose-headers: Grpc-Status,Grpc-Message,Grpc-Status-Details-Bin
    nginx.ingress.kubernetes.io/backend-protocol: GRPC
configmap:
  mountDir: /config
  filename: config.yaml
  data:
    server:
      port: 50051
      streamIntervalSeconds: 5
    prometheus:
      url: https://prometheus.spitikos.dev
      queryRangeStepSeconds: 15
scaledobject:
  minReplicas: 1
  maxReplicas: 5
  prometheus:
    query: sum(rate(nginx_ingress_controller_requests{service="api"}[2m]))
    threshold: '5'
