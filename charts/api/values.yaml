deployment:
  replicaCount: 3
  image:
    repository: ghcr.io/spitikos/api
    pullPolicy: Always
    tag: 06777fa4763b6ddd7dc81da82468f9e09ca0a28d
  podAnnotations:
    vault.hashicorp.com/agent-inject: "true"
    vault.hashicorp.com/role: "api"
    vault.hashicorp.com/agent-configmap: "api-secrets"
    vault.hashicorp.com/agent-inject-secret-config.env: "secret/data/spitikos/api"
    vault.hashicorp.com/agent-inject-template-config.env: |
      {{- with secret "secret/data/spitikos/api" -}}
      {{- range $key, $value := .Data.data }}
      {{ $key }}={{ $value }}
      {{- end }}
      {{- end }}
  resources:
    requests:
      cpu: 100m
      memory: 64Mi
    limits:
      cpu: 250m
      memory: 128Mi

vault:
  createConfigMap: true
  configMapName: "api-secrets"

serviceAccount:
  name: "api"
service:
  type: ClusterIP
  port: 50051
  targetPort: 50051
  portName: grpc
ingress:
  host: api.spitikos.dev
  annotations:
    nginx.ingress.kubernetes.io/enable-cors: 'true'
    nginx.ingress.kubernetes.io/cors-allow-origin: http://localhost:3000,https://spitikos.dev
    nginx.ingress.kubernetes.io/cors-allow-methods: GET, POST
    nginx.ingress.kubernetes.io/cors-allow-headers: Content-Type,Connect-Protocol-Version,Connect-Timeout-Ms,Grpc-Timeout,X-Grpc-Web,X-User-Agent
    nginx.ingress.kubernetes.io/cors-expose-headers: Grpc-Status,Grpc-Message,Grpc-Status-Details-Bin
    nginx.ingress.kubernetes.io/backend-protocol: GRPC
scaledobject:
  minReplicas: 1
  maxReplicas: 5
  prometheus:
    query: 'sum(rate(nginx_ingress_controller_requests{exported_service="api"}[2m]))'
    threshold: 1
configmap:
  mountDir: /config
  filename: config.yaml
  data:
    server:
      port: 50051
      streamIntervalSeconds: 5
    prometheus:
      address: https://prometheus.spitikos.dev
      queryRangeStepSeconds: 15
    redis:
      address: redis-master.redis.svc.cluster.local:6379
    github:
      owner: spitikos
