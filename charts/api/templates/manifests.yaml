apiVersion: apps/v1
kind: Deployment
metadata:
  name: api-deployment
  namespace: api
  labels:
    app: api
spec:
  replicas: 5
  selector:
    matchLabels:
      app: api
  template:
    metadata:
      labels:
        app: api
    spec:
      containers:
        - name: api
          image: "ghcr.io/spitikos/api:61aa1216a9e66a761d6bfa70fa77a3e0fd80fb93"
          imagePullPolicy: Always
          ports:
            - name: grpc
              containerPort: 50051
              protocol: TCP
          volumeMounts:
            - name: config
              mountPath: /config
      volumes:
        - name: config
          configMap:
            name: api-configmap
---
apiVersion: v1
kind: Service
metadata:
  name: api
  namespace: api
  labels:
    app: api
  annotations:
    traefik.ingress.kubernetes.io/service.serversscheme: h2c
spec:
  type: ClusterIP
  ports:
    - port: 50051
      targetPort: 50051
      protocol: TCP
      name: grpc
      appProtocol: grpc
  selector:
    app: api
---
apiVersion: traefik.io/v1alpha1
kind: IngressRoute
metadata:
  name: api-ingress-route
  namespace: api
  labels:
    app: api
spec:
  entryPoints:
    - websecure
  routes:
    - match: Host(`api.spitikos.dev`)
      kind: Rule
      services:
        - name: api
          port: 50051
          scheme: h2c
          passHostHeader: true
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: api-configmap
  namespace: api
  labels:
    app: api
data:
  config.yaml: |
    server:
      port: 50051
    prometheus_proxy:
      url: https://prometheus.spitikos.dev
      query_range_step_seconds: 15
      stream_interval_seconds: 1
